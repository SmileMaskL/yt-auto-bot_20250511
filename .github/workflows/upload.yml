# GitHub Actions 자동화 설정
name: 📤 YouTube Upload Automation

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # 매일 오전 11시 (KST)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: ✅ 리포지토리 체크아웃
      uses: actions/checkout@v4

    - name: ✅ Python 설치
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: ✅ 의존성 설치
      run: |
        rm -rf "$HOME/.cache/pip"
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt

    - name: ✅ ffmpeg 설치
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: ✅ 환경 변수 설정
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY_1 }}" >> $GITHUB_ENV
        echo "ELEVENLABS_KEY=${{ secrets.ELEVENLABS_KEY }}" >> $GITHUB_ENV
        echo "ELEVENLABS_VOICE_ID=${{ secrets.ELEVENLABS_VOICE_ID }}" >> $GITHUB_ENV
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}" >> $GITHUB_ENV

    - name: ✅ main.py 실행
      run: |
        python main.py

    - name: ✅ 로그 확인
      if: always()
      run: |
        echo "===== LOG ====="
        cat automation.log || echo "로그 없음"

    - name: 🧹 임시파일 정리
      if: always()
      run: |
        rm -rf __pycache__ *.mp3 *.mp4 *.aac *.wav *.srt *.tmp *.json *.log || true
