# GitHub Actions 자동화 설정
name: 📤 YouTube Upload Automation

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # 6시간 간격 실행

jobs:
  build:
    timeout-minutes: 45
    runs-on: ubuntu-latest

    steps:
    - name: 🕒 타임존 설정
      run: |
        sudo timedatectl set-timezone Asia/Seoul
        echo "현재 시간: $(date +'%Y-%m-%d %H:%M:%S %Z')"

    - name: ✅ 리포지토리 체크아웃
      uses: actions/checkout@v4

    - name: ✅ Python 3.10 설치
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 🔒 보안 키 검증
      run: |
        echo "===== API 키 사전 검증 ====="
        python -c "import base64,json,os;keys=json.loads(base64.b64decode(os.getenv('OPENAI_API_KEYS_BASE64')).decode());print(f'🔑 로드된 OpenAI 키 수: {len(keys)}')"

    - name: 📦 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt

    - name: 🛠️ 미디어 도구 설치
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libfontconfig1

    - name: ⚙️ 환경 변수 설정
      run: |
        echo "OPENAI_API_KEYS_BASE64=${{ secrets.OPENAI_API_KEYS_BASE64 }}" >> $GITHUB_ENV
        echo "ELEVENLABS_KEY=${{ secrets.ELEVENLABS_KEY }}" >> $GITHUB_ENV
        echo "ELEVENLABS_VOICE_ID=${{ secrets.ELEVENLABS_VOICE_ID }}" >> $GITHUB_ENV
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}" >> $GITHUB_ENV
        echo "SLACK_API_TOKEN=${{ secrets.SLACK_API_TOKEN }}" >> $GITHUB_ENV
        echo "SLACK_CHANNEL=${{ secrets.SLACK_CHANNEL }}" >> $GITHUB_ENV

    - name: ▶️ 메인 실행
      run: |
        PYTHONPATH=${{ github.workspace }} python scripts/main.py

    - name: 📊 실행 로그
      if: always()
      run: |
        echo "===== 시스템 진단 리포트 ====="
        echo "최근 오류:"
        grep "❌" automation.log | tail -n 5 || true
        echo "\n키 사용 현황:"
        grep "🔑" automation.log | tail -n 3 || true

    - name: 🗄️ 로그 관리
      if: always()
      run: |
        mkdir -p logs
        find . -name "*.log" -mtime +6 -exec zip -j "logs/archive_$(date +%Y%m%d).zip" {} +
        find . -name "*.log" -mtime +6 -delete
